[build-system]
requires = ["setuptools", "lsst-versions >= 1.3.0"]
build-backend = "setuptools.build_meta"

[project]
name = "lsst-ctrl-bps"
description = "Pluggable execution of workflow graphs from Rubin pipelines."
license = {text = "GPLv3+ License"}
readme = "README.md"
authors = [
    {name="Rubin Observatory Data Management", email="dm-admin@lists.lsst.org"},
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Astronomy",
]
keywords = ["lsst"]
dependencies = [
    "astropy >=4.0",
    "pyyaml >=5.1",
    "click >= 7.0",
    "networkx",
    "lsst-daf-butler >=25.0,<25.100",
    "lsst-pipe-base >=25.0,<25.100",
    "lsst-ctrl-mpexec >=25.0,<25.100",
    "lsst-utils >=25.0,<25.100",
    "lsst-resources >=25.0,<25.100"
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/lsst/ctrl_bps"
[project.optional-dependencies]

test = [
    "pytest >= 3.2",
    "flake8 >= 3.7.5",
    "pytest-flake8 >= 1.0.4",
    "pytest-openfiles >= 0.5.0"
]

[tool.setuptools.packages.find]
where = ["python"]

[tool.setuptools]
zip-safe = true
license-files = ["COPYRIGHT", "LICENSE"]

[tool.setuptools.package-data]
"lsst.ctrl.bps" = ["etc/*.yaml"]

[tool.setuptools.dynamic]
version = { attr = "lsst_versions.get_lsst_version" }

[tool.towncrier]
    package = "lsst.ctrl.bps"
    package_dir = "python"
    filename = "doc/lsst.ctrl.bps/CHANGES.rst"
    directory = "doc/changes"
    title_format = "lsst-ctrl-bps {version} ({project_date})"
    issue_format = "`{issue} <https://jira.lsstcorp.org/browse/{issue}>`_"

    [[tool.towncrier.type]]
        directory = "feature"
        name = "New Features"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "api"
        name = "API Changes"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "bugfix"
        name = "Bug Fixes"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "perf"
        name = "Performance Enhancement"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "misc"
        name = "Other Changes and Additions"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "removal"
        name = "An API Removal or Deprecation"
        showcontent = true

[tool.black]
line-length = 110
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 110

[tool.lsst_versions]
write_to = "python/lsst/ctrl/bps/version.py"

[tool.pytest.ini_options]
addopts = "--flake8"
flake8-ignore = ["W503", "E203", "N802", "N803", "N806", "N812", "N815", "N816"]

[tool.pydocstyle]
convention = "numpy"
# Our coding style does not require docstrings for magic methods (D105)
# Our docstyle documents __init__ at the class level (D107)
# We allow methods to inherit docstrings and this is not compatible with D102.
# Docstring at the very first line is not required
# D200, D205 and D400 all complain if the first sentence of the docstring does
# not fit on one line.
add-ignore = ["D107", "D105", "D102", "D100", "D200", "D205", "D400"]
